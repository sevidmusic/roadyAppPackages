<?php

use Apps\Documentation\resources\php\utility\DocumentationUtility;

?>


    <div class="documentation-output-container documentation-sticky-top-position2">
        <div class="documentation-output-menu-container">
            <ul>
                <li><a href="index.php?request=Apps#AppStructure">Structure</a></li>
                <li><a href="index.php?request=Apps#DevelopingAnApp">Developing Apps for Roady</a></li>
            </ul>
        </div>
    </div>

<?php

$output = <<<'EOO'

    <h3>Apps</h3>

    <p>
        Apps are used to implement one or more related features
        for a website. As an example, the documentation you are
        reading here on ROADYTECH_ROOT_URL is being provided
        by a EXTERNAL_LINK_GITHUB_ROADY A_P_P named EXTERNAL_LINK_GITHUB_DOCUMENTATION_APP,
        and the stylesheet that defines styles for ROADYTECH_ROOT_URL
        is also being provided a EXTERNAL_LINK_GITHUB_ROADY A_P_P named
        EXTERNAL_LINK_GITHUB_DOCUMENTATION_DARK_THEME_APP_URL.
    </p>

    <p>
        Apps are simply collections of source code, configuration
        files, and resources that are used to implement the features
        the A_P_P provides.
    <p>
    <p>
        The basic structure of a EXTERNAL_LINK_GITHUB_ROADY A_P_P
        consists of the following <span class="documentation-file-name">files</span> and <span class="documentation-directory-name">directories</span>:
    </p>
    <ul>
        <li class="documentation-file-name">Components.php</li>
        <li class="documentation-directory-name">css</li>
        <li class="documentation-directory-name">js</li>
        <li class="documentation-directory-name">DynamicOutput</li>
        <li class="documentation-directory-name">OutputComponents</li>
        <li class="documentation-directory-name">Requests</li>
        <li class="documentation-directory-name">Responses</li>
        <li class="documentation-directory-name">resources</li>
    </ul>
    <h3>Overview</h3>
    <dl>
        <dt class="documentation-file-name">
            Components.php
        </dt>
        <dd>
            This file is used to build the App for a website's domain so that the
            features the A_P_P provides are available to the website.
        </dd>
        <dt class="documentation-directory-name">
            css
        </dt>
        <dd>
            This directory is where any css stylesheets provided by the A_P_P
            should be placed.
        </dd>
        <dt class="documentation-directory-name">
            js
        </dt>
        <dd>
            This is where any javascript files provided by the A_P_P should be
            placed.
        </dd>
        <dt class="documentation-directory-name">
            DynamicOutput
        </dt>
        <dd>
            This directory is where any DYNAMICOUTPUTFILES provided by the app
            should be placed.
        </dd>
        <dd class="documentation-note">
            DYNAMICOUTPUTFILES, if associated with a DYNAMIC_OUTPUT_COMP, can
            be used to generate output for an A_P_P, and can be edited when
            necessary to change the output of the A_P_P. For example, this
            section of the documentation is being generated by
            <a href="https://github.com/sevidmusic/rigAppPackages/blob/rigAppPackages1.7.9/Documentation/DynamicOutput/Apps.php">
                this Dynamic Output file
            </a>.
        </dd>
        <dt class="documentation-directory-name">
            OUT_PUT_COMPS
        </dt>
        <dd>
            This directory is where any OUTPUT_COMP or DYNAMIC_OUTPUT_COMP
            configuration files defined for the A_P_P should be placed.
        </dd>
        <dt class="documentation-directory-name">
            RE_QUESTS
        </dt>
        <dd>
            This directory is where any REQUEST configuration files defined
            for the A_P_P should be placed.
        </dd>
        <dt class="documentation-directory-name">
            RE_SPONSES
        </dt>
        <dd>
            This directory is where any RESPONSE or GLOBAL_RESPONSE
            configuration files defined for the A_P_P should be placed.
        </dd>
        <dt class="documentation-directory-name">
            resources
        </dt>
        <dd>
            This directory is where any additional resources provided by the
            A_P_P, such as images, audio files, etc, should be placed.
        </dd>
    </dl>

    <h3 id="DevelopingAnApp">Developing APPS for the EXTERNAL_LINK_GITHUB_ROADY</h3>

    <p>
        APPS implement one or more related features that can be made available
        to one ore more websites running on the same EXTERNAL_LINK_GITHUB_ROADY
        installation.
    </p>
    <p>
        For an A_P_P's features to be available to a website, the A_P_P
        must be built for the website's domain.
    </p>
    <p>
        APPS may configure output to be
        available in RESPONSE to appropriate RE_QUESTS to the websites domain.
    </p>
    <p>
        APPS may provided stylesheets, javascript files,
        and other resources to any website that they are built for.
    </p>

    <p>
        To demonstrate the development of a EXTERNAL_LINK_GITHUB_ROADY A_P_P, we are
        going to develop a `MediaPlayer` A_P_P. It's purpose will be to display
        images in a gallery, or a playlist of audio or video files.
    </p>

    <p>
        The first step is to configure some output for the `MediaPlayer` app.
        We can use COMMAND_LINE_RIG for this.
    </p>
    <p>
        In general, though it is possible to develop an A_P_P manually, without
        COMMAND_LINE_RIG, it is much easier to use COMMAND_LINE_RIG.
        Using COMMAND_LINE_RIG will insure your A_P_P is setup properly
        from the start, and COMMAND_LINE_RIG provides a number of flags
        that will aide in the development and maintenance of your A_P_P.
    </p>

EOO;

echo DocumentationUtility::documentationFilterOutput($output);
